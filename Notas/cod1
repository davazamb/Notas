var resultado = miListaDeDatos
    .Where(m => m.ci_lote == 2) // Filtra por lote
    .GroupBy(m => new { m.cl_id, m.ci_fi_source, m.fi_name, m.cl_count, m.cl_currency })
    .Select(grupo => new
    {
        L = grupo.Key.cl_id,
        BC = grupo.Key.ci_fi_source,
        BN = grupo.Key.fi_name,
        DOC = grupo.Key.cl_count,
        Pen_amount = grupo.Key.cl_currency == "EU" ? grupo.Sum(m => m.ci_amount) : 0
    })
    .ToList();




var resultado = ListaLotes
    .Where(lote => ListaClientes.Any(cliente => cliente.Id == lote.Id) &&
                   ListaBancos.Any(banco => banco.Codigo == lote.Codigo))
    .Select(lote => new
    {
        L = lote.Id,
        BC = lote.Fuente,
        BN = ListaBancos.FirstOrDefault(banco => banco.Codigo == lote.Codigo)?.NombreBanco ?? "Desconocido",
        DOC = ListaClientes.FirstOrDefault(cliente => cliente.Id == lote.Id)?.CantidadDocs ?? 0,
        PenAmount = lote.Moneda == "EU" ? lote.Monto : 0
    })
    .ToList();



var resultado = ListaLotes
    .Where(lote => Cliente != null && ListaBancos.Any(banco => banco.Codigo == lote.Codigo))
    .Select(lote => new
    {
        L = lote.Id,
        BC = lote.Fuente,
        BN = ListaBancos.FirstOrDefault(banco => banco.Codigo == lote.Codigo)?.NombreBanco ?? "Desconocido",
        DOC = Cliente.CantidadDocs, // Ahora accedemos directamente a Cliente
        PenAmount = lote.Moneda == "EU" ? lote.Monto : 0
    })
    .ToList();